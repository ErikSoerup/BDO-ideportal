.comment{ :id => "comment_#{comment.id}" }
  .comment-inner
    %h4.vcard.author
      - if comment.author.admin?
        = link_to h(comment.author.name), profile_path(comment.author), :class => "fn url admin"
      - else
        = link_to h(comment.author.name), profile_path(comment.author), :class => "fn url"
    .comment-content
      %h5.posted
        Posted
        %abbr.published.time-relative== #{time_ago_in_words(comment.created_at)} ago
        in response to
        = link_to h(comment.idea.title), idea_path(comment.idea)
      %p= user_formatted_text comment.text
      %span{:id => "xxx_#{comment.id}"}
        = render :partial => 'inappropriate/xxx', :locals => { :model => comment, :dom_id => "xxx_#{comment.id}" }
      - if comment.editable_by?(current_user)
        %p
          = link_to('edit', '#', :onclick => "editCommentText(#{comment.id}); return false")
          == (For the next #{time_ago_in_words(comment.created_at + 15.minutes)})
    - if comment.editable_by?(current_user)
      .edit-comment-content{:style => "display:none"}
        - form_for(comment, :url => comment_url(comment), :html => {:method => :put, :onsubmit => "return validateCommentUpdate(#{comment.id})" }) do |f|
          .message.error{:id => "comment-#{comment.id}-missing", :style => 'display: none'}
            Please enter a comment.
          .form-group.inline#post-comment
            %label{ :for => "comment-#{comment.id}-text" } Your Comment
            = f.text_area :text, :id => "comment-#{comment.id}-text", :class => "input-textarea"
          .form-submit.inline
            = submit_tag "Update Comment", :class => "input-submit"
